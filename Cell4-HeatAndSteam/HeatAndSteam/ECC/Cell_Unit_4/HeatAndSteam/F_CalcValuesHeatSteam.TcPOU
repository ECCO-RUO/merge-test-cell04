<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.5">
  <POU Name="F_CalcValuesHeatSteam" Id="{99f54be2-3f5d-4397-b7f4-3cbaaee12bb6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION F_CalcValuesHeatSteam : REAL
VAR_INPUT
	rTempFinal		: REAL;				// [°C]		
	rTempInitial	: REAL;				// [°C]		
	rCT				: REAL;				// []		Coefficient for temperature
	rCS				: REAL;				// []		Coefficient for steam
	rCA				: REAL;				// []		Coefficient for airflow
	rMachineLength	: REAL;				// [m]		Length of machine
	// Limits
	rTimeMin		: REAL;				// [s]		Minimum allowed time in machine
	rTimeMax		: REAL;				// [s]		Maximum allowed time in machine
	rTempMin		: REAL;				// [°C]		Minimum allowed temperature in machine
	rTempMax		: REAL;				// [°C]		Maximum allowed temperature in machine
	rSteamMin		: REAL;				// []		Minimum allowed steam in machine
	rSteamMax		: REAL;				// []		Maximum allowed steam in machine
	rAirMin			: REAL;				// []		Minimum allowed airflow in machine
	rAirMax			: REAL;				// []		Maximum allowed airflow in machine	
END_VAR
VAR_OUTPUT
	rVelocity		: REAL;				// [m/s]	Carrier velocity
	rTempMachine	: REAL;				// [°C]		Machine temperature
	rTimeMachine	: REAL;				// [s]		Time in machine
	rSteamMachine	: REAL;				// []		
	rAirMachine		: REAL;				// []		
END_VAR
VAR
	// Limits
	rVelocityMin	: REAL := 0.001;	// [m/s]	Minimum allowed speed
	rVelocityMax	: REAL := 2.0;		// [m/s]	Maximum allowed speed
	
	// Temp
	rVelocityCalcRaw: REAL;				// [m/s]	
	rVelocityCalc	: REAL;				// [m/s]	
	rTimeCalcRaw	: REAL;				// [s]		
	rTimeCalc		: REAL;				// [s]		
	sTempString		: STRING(200);		// 			
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// Calculate time needed in device and machine temperature
//t = ( (TFinal) / (TMachine * cT + SMachine * cS + AMachine * cA) ) - TInitial

// If constants are ZERO use fixed time in mechine from job data (minimum time)
IF ( (rCT = 0.0) AND (rCS = 0.0) AND (rCA = 0.0) ) THEN
	rTimeCalcRaw := rTimeMin;
	rTempMachine := rTempMax;
	rSteamMachine := rSteamMax;
	rAirMax := rAirMax;
	
ELSE
	rTempMachine := (rTempMin + rTempMax) / 2.0;
	rSteamMachine := (rSteamMin + rSteamMax) / 2.0;
	rAirMachine := (rAirMin + rAirMax) / 2.0;

	// Check for divide-by-zero
	IF ((rTempMachine * rCT) + (rSteamMachine * rCS) + (rAirMachine * rCA)) = 0.0 THEN
		rTimeCalcRaw := rTimeMin;
		rTempMachine := rTempMax;
		rSteamMachine := rSteamMax;
		rAirMax := rAirMax;
	ELSE
		rTimeCalcRaw := (rTempFinal - rTempInitial) / ((rTempMachine * rCT) + (rSteamMachine * rCS) + (rAirMachine * rCA));	
	END_IF
	
END_IF

// Limit time in device according to job data
rTimeCalc := LIMIT(rTimeMin, rTimeCalcRaw, rTimeMax);

// Make sure time is not ZERO
IF (rTimeCalc <= 0.0) THEN
	rTimeCalc := 120.0;

END_IF

// Calculate velocity based on time in machine and machine length
rVelocityCalcRaw := rMachineLength / rTimeCalc;

// Limit velocity to allowed limits
rVelocityCalc := LIMIT(rVelocityMin, rVelocityCalcRaw, rVelocityMax);

// Log
	sTempString := CONCAT('STAT: ', 'Velocity Calc ');
	sTempString := CONCAT(sTempString, '. Temp=');
	sTempString := CONCAT(sTempString, TO_STRING(rTempMachine));
	sTempString := CONCAT(sTempString, '. Steam=');
	sTempString := CONCAT(sTempString, TO_STRING(rSteamMachine));
	sTempString := CONCAT(sTempString, '. Air=');
	sTempString := CONCAT(sTempString, TO_STRING(rAirMachine));
	sTempString := CONCAT(sTempString, '. Time_RAW=');
	sTempString := CONCAT(sTempString, TO_STRING(rTimeCalcRaw));
	sTempString := CONCAT(sTempString, '. Time=');
	sTempString := CONCAT(sTempString, TO_STRING(rTimeCalc));
	sTempString := CONCAT(sTempString, '. Vel_RAW=');
	sTempString := CONCAT(sTempString, TO_STRING(rVelocityCalcRaw));
	sTempString := CONCAT(sTempString, '. Vel=');
	sTempString := CONCAT(sTempString, TO_STRING(rVelocityCalc));
	F_Logfile(sTempString);

// Output
rVelocity := rVelocityCalc;
rTempMachine := rTempMachine;
rSteamMachine := rSteamMachine;
rAirMachine := rAirMachine;
rTimeMachine := rTimeCalc;
]]></ST>
    </Implementation>
    <LineIds Name="F_CalcValuesHeatSteam">
      <LineId Id="95" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="186" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="192" Count="3" />
      <LineId Id="189" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="88" Count="2" />
      <LineId Id="124" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="119" Count="1" />
      <LineId Id="122" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="106" Count="1" />
      <LineId Id="126" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="141" Count="1" />
      <LineId Id="197" Count="3" />
      <LineId Id="136" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="137" Count="1" />
      <LineId Id="130" Count="1" />
      <LineId Id="143" Count="1" />
      <LineId Id="132" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="201" Count="1" />
      <LineId Id="162" Count="0" />
      <LineId Id="158" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>